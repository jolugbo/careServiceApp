/*! ============================================================
 * bootstrapSwitch v1.8 by Larentis Mattia @SpiritualGuru
 * http://www.larentis.eu/
 * 
 * Enhanced for radiobuttons by Stein, Peter @BdMdesigN
 * http://www.bdmdesign.org/
 *
 * Project site:
 * http://www.larentis.eu/switch/
 * ============================================================
 * Licensed under the Apache License, Version 2.0
 * http://www.apache.org/licenses/LICENSE-2.0
 * ============================================================ */
!function (t) { "use strict"; t.fn.bootstrapSwitch = function (a) { var e = 'input[type!="hidden"]', i = { init: function () { return this.each(function () { var a, i, s, n, d, o, c = t(this), r = c.closest("form"), h = "", l = c.attr("class"), f = "Male", u = "Female", p = !1, v = !1; t.each(["switch-mini", "switch-small", "switch-large"], function (t, a) { l.indexOf(a) >= 0 && (h = a) }), c.addClass("has-switch"), void 0 !== c.data("on") && (d = "switch-" + c.data("on")), void 0 !== c.data("on-label") && (f = c.data("on-label")), void 0 !== c.data("off-label") && (u = c.data("off-label")), void 0 !== c.data("label-icon") && (p = c.data("label-icon")), void 0 !== c.data("text-label") && (v = c.data("text-label")), i = t("<span>").addClass("switch-left").addClass(h).addClass(d).html(f), d = "", void 0 !== c.data("off") && (d = "switch-" + c.data("off")), s = t("<span>").addClass("switch-right").addClass(h).addClass(d).html(u), n = t("<label>").html("&nbsp;").addClass(h).attr("for", c.find(e).attr("id")), p && n.html('<i class="icon ' + p + '"></i>'), v && n.html("" + v), a = c.find(e).wrap(t("<div>")).parent().data("animated", !1), c.data("animated") !== !1 && a.addClass("switch-animate").data("animated", !0), a.append(i).append(n).append(s), c.find(">div").addClass(c.find(e).is(":checked") ? "switch-on" : "switch-off"), c.find(e).is(":disabled") && t(this).addClass("deactivate"); var g = function (t) { c.parent("label").is(".label-change-switch") || t.siblings("label").trigger("mousedown").trigger("mouseup").trigger("click") }; c.on("keydown", function (a) { 32 === a.keyCode && (a.stopImmediatePropagation(), a.preventDefault(), g(t(a.target).find("span:first"))) }), i.on("click", function (a) { g(t(this)) }), s.on("click", function (a) { g(t(this)) }), c.find(e).on("change", function (a, e) { var i = t(this), s = i.parent(), n = i.is(":checked"), d = s.is(".switch-off"); if (a.preventDefault(), s.css("left", ""), d === n) { if (n ? s.removeClass("switch-off").addClass("switch-on") : s.removeClass("switch-on").addClass("switch-off"), s.data("animated") !== !1 && s.addClass("switch-animate"), "boolean" == typeof e && e) return; s.parent().trigger("switch-change", { el: i, value: n }) } }), c.find("label").on("mousedown touchstart", function (a) { var e = t(this); o = !1, a.preventDefault(), a.stopImmediatePropagation(), e.closest("div").removeClass("switch-animate"), e.closest(".has-switch").is(".deactivate") ? e.unbind("click") : e.closest(".switch-on").parent().is(".radio-no-uncheck") ? e.unbind("click") : (e.on("mousemove touchmove", function (a) { var e = t(this).closest(".make-switch"), i = (a.pageX || a.originalEvent.targetTouches[0].pageX) - e.offset().left, s = i / e.width() * 100, n = 25, d = 75; o = !0, n > s ? s = n : s > d && (s = d), e.find(">div").css("left", s - d + "%") }), e.on("click touchend", function (a) { var e = t(this), i = t(a.target), s = i.siblings("input"); a.stopImmediatePropagation(), a.preventDefault(), e.unbind("mouseleave"), o ? s.prop("checked", !(parseInt(e.parent().css("left")) < -25)) : s.prop("checked", !s.is(":checked")), o = !1, s.trigger("change") }), e.on("mouseleave", function (a) { var e = t(this), i = e.siblings("input"); a.preventDefault(), a.stopImmediatePropagation(), e.unbind("mouseleave"), e.trigger("mouseup"), i.prop("checked", !(parseInt(e.parent().css("left")) < -25)).trigger("change") }), e.on("mouseup", function (a) { a.stopImmediatePropagation(), a.preventDefault(), t(this).unbind("mousemove") })) }), "injected" !== r.data("bootstrapSwitch") && (r.bind("reset", function () { setTimeout(function () { r.find(".make-switch").each(function () { var a = t(this).find(e); a.prop("checked", a.is(":checked")).trigger("change") }) }, 1) }), r.data("bootstrapSwitch", "injected")) }) }, toggleActivation: function () { var a = t(this); a.toggleClass("deactivate"), a.find(e).prop("disabled", a.is(".deactivate")) }, isActive: function () { return !t(this).hasClass("deactivate") }, setActive: function (a) { var i = t(this); a ? (i.removeClass("deactivate"), i.find(e).removeAttr("disabled")) : (i.addClass("deactivate"), i.find(e).attr("disabled", "disabled")) }, toggleState: function (a) { var e = t(this).find(":checkbox"); e.prop("checked", !e.is(":checked")).trigger("change", a) }, toggleRadioState: function (a) { var e = t(this).find(":radio"); e.not(":checked").prop("checked", !e.is(":checked")).trigger("change", a) }, toggleRadioStateAllowUncheck: function (a, e) { var i = t(this).find(":radio"); a ? i.not(":checked").trigger("change", e) : i.not(":checked").prop("checked", !i.is(":checked")).trigger("change", e) }, setState: function (a, i) { t(this).find(e).prop("checked", a).trigger("change", i) }, setOnLabel: function (a) { var e = t(this).find(".switch-left"); e.html(a) }, setOffLabel: function (a) { var e = t(this).find(".switch-right"); e.html(a) }, setOnClass: function (a) { var e = t(this).find(".switch-left"), i = ""; void 0 !== a && (void 0 !== t(this).attr("data-on") && (i = "switch-" + t(this).attr("data-on")), e.removeClass(i), i = "switch-" + a, e.addClass(i)) }, setOffClass: function (a) { var e = t(this).find(".switch-right"), i = ""; void 0 !== a && (void 0 !== t(this).attr("data-off") && (i = "switch-" + t(this).attr("data-off")), e.removeClass(i), i = "switch-" + a, e.addClass(i)) }, setAnimated: function (a) { var i = t(this).find(e).parent(); void 0 === a && (a = !1), i.data("animated", a), i.attr("data-animated", a), i.data("animated") !== !1 ? i.addClass("switch-animate") : i.removeClass("switch-animate") }, setSizeClass: function (a) { var e = t(this), i = e.find(".switch-left"), s = e.find(".switch-right"), n = e.find("label"); t.each(["switch-mini", "switch-small", "switch-large"], function (t, e) { e !== a ? (i.removeClass(e), s.removeClass(e), n.removeClass(e)) : (i.addClass(e), s.addClass(e), n.addClass(e)) }) }, status: function () { return t(this).find(e).is(":checked") }, destroy: function () { var a, e = t(this), i = e.find("div"), s = e.closest("form"); return i.find(":not(input)").remove(), a = i.children(), a.unwrap().unwrap(), a.unbind("change"), s && (s.unbind("reset"), s.removeData("bootstrapSwitch")), a } }; return i[a] ? i[a].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof a && a ? void t.error("Method " + a + " does not exist!") : i.init.apply(this, arguments) } }(jQuery), function (t) { t(function () { t(".make-switch").bootstrapSwitch() }) }(jQuery);